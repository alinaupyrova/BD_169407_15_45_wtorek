zad 1: 
a) DELIMITER $$
CREATE TRIGGER waga_tr BEFORE INSERT ON kreatura 
FOR EACH ROW BEGIN 
 IF NEW.waga <= 0 THEN SIGNAL SQLSTATE '45000'
 SET MESSAGE_TEXT = 'waga nie moze byc mniejsza lub rowna 0';
 END IF;
END$$ DELIMITER;
b) DELIMITER $$
CREATE TRIGGER waga_tr_2 BEFORE UPDATE ON kreatura
FOR EACH ROW BEGIN
 IF NEW.waga <= 0 THEN SIGNAL SQLSTATE '45000'
 SET MESSAGE_TEXT = 'waga nie moze byc mniejsza lub rowna 0';
 END IF;
END$$ DELIMITER;
zad 2: 
a) CREATE TABLE archiwum_wypraw(
id_wyprawy INT NOT NULL AUTO_INCREMENT,
nazwa VARCHAR(25), 
data_rozpoczecia DATE, 
data_zakonczenia DATE,
kierownik VARCHAR(100));
b)DELIMITER $$ 
CREATE TRIGGER tr_wyprawa 
AFTER DELETE ON wyprawa 
FOR EACH ROW BEGIN 
INSERT INTO archiwum_wypraw
VALUES(OLD.id_wyprawy,OLD.nazwa, OLD.data_rozpoczecia, OLD.data_zakonczenia,
(SELECT nazwa FROM kreatura WHERE kreatura.idKreatury=OLD.kierownik));
END$$ 
DELIMITER;
zad 3:
a) CREATE PROCEDURE eliksir_sily(IN id_kreatury INT)
BEGIN UPDATE kreatura 
SET udzwig = udzwig * 1.2 
WHERE id_kreatury=id_kreatury;
END;
B)CREATE FUNCTION zm(tekst 
VARCHAR(255)) 
RETURNS VARCHAR (225) 
BEGIN DECLARE res VARCHAR (255);
SET res = UPPER(tekst);
RETURN res;
END;
zad 4:
a)





zad 5:



